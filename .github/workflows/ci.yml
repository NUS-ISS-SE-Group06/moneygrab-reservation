name: CI - Java Test and Build

on:
  push:
    branches:
      - '**'  # Run CI on all branches
    paths:
      - 'src/**'
      - 'pom.xml'
      - '.github/**'
      - 'deployment/**'
  pull_request:
    branches:
      - main  # Run CI on PRs into main
    paths:
      - 'src/**'
      - 'pom.xml'
      - '.github/**'
      - 'deployment/**'
  workflow_dispatch:

jobs:
  test_build:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} clea
          restore-keys: ${{ runner.os }}-m2

      - name: Build Project
        run: mvn -B clean package -DskipTests

  unit_test:
    name: Unit Test
    needs: test_build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DB_USERNAME: testuser
      DB_PASSWORD: testpass
      DB_URL: jdbc:mysql://127.0.0.1:3306/testdb
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testpass
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Unit Test
        run: mvn -B test

  code_scan:
    name: Code Quality Scan
    needs: unit_test
    runs-on: ubuntu-latest

    steps:
      - name:  SonarCloud Analysis
        run: |
            echo "Automatic Analysis result: https://sonarcloud.io/project/overview?id=NUS-ISS-SE-Group06_moneygrab-operations"
            

